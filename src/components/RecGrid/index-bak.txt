virtuoso

const renderContainer = (children: ReactNode) => {
      /* 这里只定义列数, 宽度 100% */
      return (
        <div ref={(el) => (containerRef.current = el)} className={containerClassName}>
          {children}
        </div>
      )
    }

    const showSkeleton = refreshError || (refreshing && !swr)

    // skeleton loading
    if (showSkeleton) {
      renderContainer(
        new Array(28).fill(undefined).map((_, index) => {
          const x = <VideoCard key={index} loading={true} className={CardClassNames.card} />
          return <VideoCard key={index} loading={true} className={CardClassNames.card} />
        })
      )

    } else {
      return (
        <div>
          <VirtuosoGrid
            scrollerRef={(el) => (containerRef.current = el)}
            useWindowScroll
            data={items}
            listClassName={containerClassName}
            logLevel={LogLevel.DEBUG}
            // endReached={loadMore}
            overscan={window.innerHeight}
            computeItemKey={(index, item) => item.uniqId}
            components={{
              Footer() {
                return <></>
              },
            }}
            itemContent={(index, item) => {
              const active = index === activeIndex
              return (
                <VideoCard
                  ref={(val) => (videoCardRefs[index] = val)}
                  key={item.uniqId}
                  className={cx(CardClassNames.card, { [CardClassNames.cardActive]: active })}
                  item={item}
                  active={active}
                  onRemoveCurrent={handleRemoveCard}
                />
              )
            }}
          />
          <div
            ref={footerRef}
            css={css`
              text-align: center;
              line-height: 60px;
              font-size: 120%;
            `}
          >
            {!refreshing && (!hasMore ? <>没有更多了~</> : <>加载中...</>)}
          </div>
        </div>
      )
    }


---------------

"react-infinite-scroller": "^1.2.6",
"@types/react-infinite-scroller": "^1.2.3",

import InfiniteScroll from 'react-infinite-scroller'

<InfiniteScroll
  pageStart={0}
  hasMore={hasMore}
  loadMore={loadMore}
  initialLoad={false}
  useWindow={infiteScrollUseWindow}
  threshold={window.innerHeight * 1} // 一屏
  style={{ minHeight: '100%' }}
>
</InfiniteScroll>
