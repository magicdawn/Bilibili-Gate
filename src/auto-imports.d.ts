/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
// biome-ignore lint: disable
export {}
declare global {
  const Fragment: typeof import('react')['Fragment']
  const IconIconParkOutlineDownC: typeof import('~icons/icon-park-outline/down-c.jsx')['default']
  const IconLineMdMenuToCloseAltTransition: typeof import('~icons/line-md/menu-to-close-alt-transition.jsx')['default']
  const IconLineMdRemove: typeof import('~icons/line-md/remove.jsx')['default']
  const IconMaterialSymbolsDeleteOutlineRounded: typeof import('~icons/material-symbols/delete-outline-rounded.jsx')['default']
  const IconMaterialSymbolsLightOpenInNewOff: typeof import('~icons/material-symbols-light/open-in-new-off.jsx')['default']
  const IconRadixIconsPerson: typeof import('~icons/radix-icons/person.jsx')['default']
  const IconSvgSpinnersBarsRotateFade: typeof import('~icons/svg-spinners/bars-rotate-fade.jsx')['default']
  const IconTablerFaceIdError: typeof import('~icons/tabler/face-id-error.jsx')['default']
  const clsx: typeof import('clsx')['clsx']
  const createRef: typeof import('react')['createRef']
  const createRoot: typeof import('react-dom/client')['createRoot']
  const css: typeof import('@emotion/react')['css']
  const forwardRef: typeof import('react')['forwardRef']
  const lazy: typeof import('react')['lazy']
  const memo: typeof import('react')['memo']
  const size: typeof import('polished')['size']
  const startTransition: typeof import('react')['startTransition']
  const useCallback: typeof import('react')['useCallback']
  const useContext: typeof import('react')['useContext']
  const useDebugValue: typeof import('react')['useDebugValue']
  const useDeferredValue: typeof import('react')['useDeferredValue']
  const useEffect: typeof import('react')['useEffect']
  const useId: typeof import('react')['useId']
  const useImperativeHandle: typeof import('react')['useImperativeHandle']
  const useInsertionEffect: typeof import('react')['useInsertionEffect']
  const useKeyPress: typeof import('ahooks')['useKeyPress']
  const useLayoutEffect: typeof import('react')['useLayoutEffect']
  const useMemo: typeof import('react')['useMemo']
  const useMemoizedFn: typeof import('ahooks')['useMemoizedFn']
  const useMount: typeof import('ahooks')['useMount']
  const useReducer: typeof import('react')['useReducer']
  const useRef: typeof import('react')['useRef']
  const useState: typeof import('react')['useState']
  const useSyncExternalStore: typeof import('react')['useSyncExternalStore']
  const useTransition: typeof import('react')['useTransition']
  const useUpdateEffect: typeof import('ahooks')['useUpdateEffect']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { ComponentProps, CSSProperties, ReactNode, RefObject } from 'react'
  import('react')
  // @ts-ignore
  export type { Root } from 'react-dom/client'
  import('react-dom/client')
}
